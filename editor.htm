<html>
    <title>Axorus - DMD driver</title>
<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script type="text/javascript">
    var canvas, ctx, flag = false,
        prevX = 0,
        currX = 0,
        prevY = 0,
        currY = 0,
        dot_flag = false;

    var sw = 100,
        sh = 100;

    function init() {
        canvas = document.getElementById('can');
        ctx = canvas.getContext("2d");
        w = canvas.width;
        h = canvas.height;

        ctx.clearRect(0, 0, w, h);

        canvas.addEventListener("mousemove", function (e) {
            findxy('move', e)
        }, false);
        canvas.addEventListener("mousedown", function (e) {
            findxy('down', e)
        }, false);
        canvas.addEventListener("mouseup", function (e) {
            findxy('up', e)
        }, false);
        canvas.addEventListener("mouseout", function (e) {
            findxy('out', e)
        }, false);

        drawBG();
    }

    function draw() {
        ctx.beginPath();
        if (eraser) {
            ctx.clearRect(currX - sw / 2, currY - sh / 2, sw, sh);
        }
        else {
            ctx.fillStyle = "white";
            ctx.fillRect(currX - sw / 2, currY - sh / 2, sw, sh);
        }
        ctx.stroke();
        ctx.closePath();
    }

    function erase() {
        var m = confirm("Effacer ?");
        if (m) {
            ctx.clearRect(0, 0, w, h);
        }
    }

    function findxy(res, e) {

        if (res == 'down') {
            prevX = currX;
            prevY = currY;
            currX = e.clientX - canvas.offsetLeft - 100;
            currY = e.clientY - canvas.offsetTop;
            draw();
            flag = true;
        }
        if (res == 'up' || res == "out") {
            flag = false;
        }
        if (res == 'move') {
            if (flag) {
                prevX = currX;
                prevY = currY;
                currX = e.clientX - canvas.offsetLeft - 100;
                currY = e.clientY - canvas.offsetTop;
                draw();
            }
        }
    }

    function sizer(e) {
        sw = sh = e.value;
    }

    function load() {
        var canvas = document.getElementById('can');
        var imageData = canvas.getContext('2d').getImageData(0, 0, 1024, 768);
        var u8a = new Uint8Array(imageData.data.buffer);

        var xhr = new XMLHttpRequest();
        xhr.open("POST", '/load', false);
        xhr.send(u8a);
    }

    function save() {
        load();
        var xhr = new XMLHttpRequest();
        xhr.open("GET", '/save', false);
        xhr.send();
    }

    function fullframe() {
        ctx.fillStyle = "white";
        ctx.fillRect(0, 0, 1024, 768);
    }

    function centerCross() {
        var h = 768;
        var w = 1024;
        var l = 8;
        var L = 60;
        ctx.fillStyle = "white";
        ctx.fillRect(w / 2 - l / 2, h / 2 - L / 2, l, L);
        ctx.fillRect(w / 2 - L / 2, h / 2 - l / 2, L, l);
        ctx.fillRect(w / 2 - 2 * l, h / 2 - L / 2, 4 * l, l);
        ctx.fillRect(w / 2 + 1.5 * l, h / 2 + 1.5 * l, 2 * l, 2 * l);
    }


    function move(dx, dy) {
        var id = ctx.getImageData(0, 0, 1024, 768);
        ctx.clearRect(0, 0, 1024, 768);
        ctx.putImageData(id, dx, dy);
    }

    function loadBin() {
        ctx.clearRect(0, 0, w, h);
        $.getJSON("/loadbin", (data) => {
            console.log(data);
            var image = new Image();
            image.onload = () => {
                ctx.drawImage(image, 0, 0);
            }
            image.src = data;
        });
    }

    function drawBG() {
        cbg = document.getElementById('canbg');
        ctxbg = cbg.getContext("2d");
        ctxbg.strokeStyle = "blue";

        for(var i = 1; i < 10; i++){
            ctxbg.beginPath();
            ctxbg.moveTo(i*w/10, 1);
            ctxbg.lineTo(i*w/10, h);
            ctxbg.stroke();
        }

        for(var i = 1; i < 10; i++){
            ctxbg.beginPath();
            ctxbg.moveTo(1, i*h/10);
            ctxbg.lineTo(w, i*h/10);
            ctxbg.stroke();
        }

        ctxbg.fillStyle = "#5555FF";
        ctxbg.font = "20px Arial";
        for(var i = 0; i < 10; i++){
            ctxbg.fillText(i, i * w / 10 + 10, h/2 - 10);
        }
        for(var i = 0; i < 10; i++){
            var alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split('');
            ctxbg.fillText(alphabet[i], w / 2 + 10, i * h / 10 + 25);
        }
        
    }

    var eraser = false;

    function toggleEraser(o){
        var col = "";
        eraser=!eraser;
        if(eraser){
            col = "blue";
        }
        $(o).css('color',col);
    }

    function play(){
        save();
        $.getJSON("/play");
    }

    function stop(){
        $.getJSON("/stop");
    }

    function prep(){
        var imgData = canvas.getContext('2d').getImageData(0, 0, 1024, 768);
        cprep = document.getElementById('canprep');
        ctxprep = cprep.getContext("2d");
        createImageBitmap(imgData).then((imgBitmap) => {
            ctxprep.translate(1024/2,720/2);
            ctxprep.rotate(Math.PI / 2);
            ctxprep.translate(-1024/2,-720/2);
            //Mirror
            ctxprep.translate(1024/2,720/2);
            ctxprep.scale(-1,1);
            ctxprep.drawImage(imgBitmap,0,0);
        })


    }


</script>
<link href="https://cdn.jsdelivr.net/npm/remixicon@2.5.0/fonts/remixicon.css" rel="stylesheet">
<style>
    body {
        color: white;
        background-color: black;
    }

    #editor {
        position: absolute;
        top:0px;
        left:100px;
    }

    #menu {
        width: 100px;
    }

    #menu>span{
        padding-left: 15px;
        cursor: pointer;
        font-size:50px;
    }
</style>

<body onload="init()">
    <div id="menu">
        <span onclick="play()" title="Play on Microscope"><i class="ri-microscope-line"></i></span>
        <span onclick="stop()" title="Stop equence on Microscope"><i class="ri-stop-circle-line"></i></span>
        <span onclick="erase()" title="Clear image"><i class="ri-delete-bin-line"></i></span>
        <span onclick="toggleEraser(this)" title="Eraser"><i class="ri-eraser-line"></i></span>
        <span onclick="save()" title="Save BIN to bin/flash.bin"><i class="ri-save-3-line"></i></span>
        <span onclick="fullframe()" title="Fullframe"><i class="ri-sun-line"></i></span>
        <span onclick="centerCross()" title="Draw Center Cross for reference"><i class="ri-focus-3-line"></i></span>
        <span onclick="move(0,-h/10)" title="Move Up"><i class="ri-arrow-up-line"></i></span>
        <span onclick="move(0,h/10)" title="Move Down"><i class="ri-arrow-down-line"></i></span>
        <span onclick="move(-w/10,0)" title="Move Left"><i class="ri-arrow-left-line"></i></span>
        <span onclick="move(w/10,0)" title="Move Right"><i class="ri-arrow-right-line"></i></span>
        <span onclick="loadBin()" title="Load BIN from bin/flash.bin"><i class="ri-database-2-line"></i></span>
    </div>
    <div id="editor">
        <canvas id="can" width="1024" height="768" style="position:absolute;top:0;left:0px;border:1px solid white;"></canvas>
        <canvas id="canbg" width="1024" height="768" style="position:absolute;top:0;left:0px;z-index:2;pointer-events: none;"></canvas>
    </div>
    <input type="range" min="1" max="100" onclick="sizer(this)" style="position:absolute;top:20px;left:110px;">
    <canvas id="canprep" width="1024" height="768" style="position:absolute;top:790px;left:100px;border:1px solid white;"></canvas>
</body>

</html>